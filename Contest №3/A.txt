#include <stdlib.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <climits>

using namespace std;
long long otr[3] = {}, pol[3] = {-1, -1, -1};

int main() {
    int n, i = 0;
    long long tmp;
    scanf("%d", &n);
    for (int j = 0; j < n; j++) {
        scanf("%lld", &tmp);
        if (tmp > 0) { // 0 1 2
            i = 0;
            for (; i < 3; i++) {
                if (pol[i] > tmp) {
                    break;
                }
            }
            if (i == 1) {
                pol[0] = tmp;
            } else
            if (i == 2) {
                pol[0] = pol[1];
                pol[1] = tmp;
            } else
            if (i == 3) {
                pol[0] = pol[1];
                pol[1] = pol[2];
                pol[2] = tmp;
            }
        } else {
            tmp = -tmp;
            i = 0;
            for (; i < 3; i++) {
                if (otr[i] > tmp) {
                    break;
                }
            }
            if (i == 1) {
                otr[0] = tmp;
            } else
            if (i == 2) {
                otr[0] = otr[1];
                otr[1] = tmp;
            } else
            if (i == 3) {
                otr[0] = otr[1];
                otr[1] = otr[2];
                otr[2] = tmp;
            }
        }
    }
    vector <long long> A;
    i = 0;
    for (; i < 3; i++) {
        if (pol[i] > 0)
            A.push_back(pol[i]);
        A.push_back(-otr[i]);
    }
    long long res = LLONG_MIN;
    int u = min(6, (int)A.size());
    i = 0;
    for (; i < u; i++)
       for (int j = i + 1; j < u; j++)
           for (int k = j + 1; k < u; k++) {
               res = max(res, A[i] * A[j] * A[k]);
           }
    cout << res;
    return 0;
}

