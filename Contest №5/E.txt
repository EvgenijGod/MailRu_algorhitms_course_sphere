#include <iostream>
#include <algorithm>
#include <math.h>
#include <vector>
#include <set>
#include <map>

using namespace std;

const int MX = 999999;
int n, m, ans = 0;
vector<vector<int>> w;
multiset<int> mem;
map<long long, int> evg;
vector<int> way;
int A[100000] = {};

int main() {
    int ot = 0;
    scanf("%d %d", &n, &m);
    w.resize(m);
    way.resize(m);
    for (int i = 0; i < m; i++) {
        long long tmp;
        scanf("%lld", &tmp);
        auto x = evg.find(tmp);
        if (x != evg.end()) {
            w[(*x).second].push_back(i);
            way[i] = (*x).second;
        } else {
            way[i] = ot;
            evg.insert({tmp, ot++});
        }
    }
    int e = 1;
    for (int i = 0; i < m; i++) {
        w[i].push_back(MX + e);
        e++;
    }
    int sz = 0;
    for (int i = 0; i < m; i++) {
        int tmp = way[i];
        auto x = mem.find(i);
        if (x == mem.end()) {
            ans++;
            if (sz < n) {
                sz++;
            } else {
                x--;
                mem.erase((*x));
            }
            mem.insert(w[tmp][A[tmp]++]);
        } else {
            mem.erase((*x));
            mem.insert(w[tmp][A[tmp]++]);
        }
    }
    printf("%d", ans);
    //cout << ans;
    return 0;
}